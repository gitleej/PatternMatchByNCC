// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: template_data.proto

#include "template_data.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace templdata {

inline constexpr ScalarProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : v0_{0},
        v1_{0},
        v2_{0},
        v3_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScalarProto::ScalarProto(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScalarProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarProtoDefaultTypeInternal() {}
  union {
    ScalarProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarProtoDefaultTypeInternal _ScalarProto_default_instance_;

inline constexpr MatProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rows_{0},
        cols_{0},
        type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MatProto::MatProto(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MatProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatProtoDefaultTypeInternal() {}
  union {
    MatProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatProtoDefaultTypeInternal _MatProto_default_instance_;

inline constexpr TemplDataProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pyramid_{},
        templmean_{},
        templnorm_{},
        invarea_{},
        resultequal1_{},
        ispatternlearned_{false},
        bordercolor_{0},
        pyramidlayers_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TemplDataProto::TemplDataProto(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TemplDataProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TemplDataProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TemplDataProtoDefaultTypeInternal() {}
  union {
    TemplDataProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TemplDataProtoDefaultTypeInternal _TemplDataProto_default_instance_;
}  // namespace templdata
static ::_pb::Metadata file_level_metadata_template_5fdata_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_template_5fdata_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_template_5fdata_2eproto = nullptr;
const ::uint32_t TableStruct_template_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::templdata::ScalarProto, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::templdata::ScalarProto, _impl_.v0_),
    PROTOBUF_FIELD_OFFSET(::templdata::ScalarProto, _impl_.v1_),
    PROTOBUF_FIELD_OFFSET(::templdata::ScalarProto, _impl_.v2_),
    PROTOBUF_FIELD_OFFSET(::templdata::ScalarProto, _impl_.v3_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::templdata::MatProto, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::templdata::MatProto, _impl_.rows_),
    PROTOBUF_FIELD_OFFSET(::templdata::MatProto, _impl_.cols_),
    PROTOBUF_FIELD_OFFSET(::templdata::MatProto, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::templdata::MatProto, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _impl_.pyramid_),
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _impl_.templmean_),
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _impl_.templnorm_),
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _impl_.invarea_),
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _impl_.resultequal1_),
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _impl_.ispatternlearned_),
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _impl_.bordercolor_),
    PROTOBUF_FIELD_OFFSET(::templdata::TemplDataProto, _impl_.pyramidlayers_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::templdata::ScalarProto)},
        {12, -1, -1, sizeof(::templdata::MatProto)},
        {24, -1, -1, sizeof(::templdata::TemplDataProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::templdata::_ScalarProto_default_instance_._instance,
    &::templdata::_MatProto_default_instance_._instance,
    &::templdata::_TemplDataProto_default_instance_._instance,
};
const char descriptor_table_protodef_template_5fdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023template_data.proto\022\ttempldata\"=\n\013Scal"
    "arProto\022\n\n\002v0\030\001 \001(\001\022\n\n\002v1\030\002 \001(\001\022\n\n\002v2\030\003 "
    "\001(\001\022\n\n\002v3\030\004 \001(\001\"B\n\010MatProto\022\014\n\004rows\030\001 \001("
    "\005\022\014\n\004cols\030\002 \001(\005\022\014\n\004type\030\003 \001(\005\022\014\n\004data\030\004 "
    "\001(\014\"\341\001\n\016TemplDataProto\022$\n\007pyramid\030\001 \003(\0132"
    "\023.templdata.MatProto\022)\n\ttemplMean\030\002 \003(\0132"
    "\026.templdata.ScalarProto\022\021\n\ttemplNorm\030\003 \003"
    "(\001\022\017\n\007invArea\030\004 \003(\001\022\024\n\014resultEqual1\030\005 \003("
    "\010\022\030\n\020isPatternLearned\030\006 \001(\010\022\023\n\013borderCol"
    "or\030\007 \001(\005\022\025\n\rpyramidLayers\030\010 \001(\005b\006proto3"
};
static ::absl::once_flag descriptor_table_template_5fdata_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_template_5fdata_2eproto = {
    false,
    false,
    399,
    descriptor_table_protodef_template_5fdata_2eproto,
    "template_data.proto",
    &descriptor_table_template_5fdata_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_template_5fdata_2eproto::offsets,
    file_level_metadata_template_5fdata_2eproto,
    file_level_enum_descriptors_template_5fdata_2eproto,
    file_level_service_descriptors_template_5fdata_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_template_5fdata_2eproto_getter() {
  return &descriptor_table_template_5fdata_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_template_5fdata_2eproto(&descriptor_table_template_5fdata_2eproto);
namespace templdata {
// ===================================================================

class ScalarProto::_Internal {
 public:
};

ScalarProto::ScalarProto(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:templdata.ScalarProto)
}
ScalarProto::ScalarProto(
    ::google::protobuf::Arena* arena, const ScalarProto& from)
    : ScalarProto(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ScalarProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScalarProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, v0_),
           0,
           offsetof(Impl_, v3_) -
               offsetof(Impl_, v0_) +
               sizeof(Impl_::v3_));
}
ScalarProto::~ScalarProto() {
  // @@protoc_insertion_point(destructor:templdata.ScalarProto)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScalarProto::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ScalarProto::Clear() {
// @@protoc_insertion_point(message_clear_start:templdata.ScalarProto)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.v0_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.v3_) -
      reinterpret_cast<char*>(&_impl_.v0_)) + sizeof(_impl_.v3_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScalarProto::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ScalarProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScalarProto_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double v3 = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v3_)}},
    // double v0 = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v0_)}},
    // double v1 = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v1_)}},
    // double v2 = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double v0 = 1;
    {PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v0_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double v1 = 2;
    {PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double v2 = 3;
    {PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double v3 = 4;
    {PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v3_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ScalarProto::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:templdata.ScalarProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double v0 = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v0 = this->_internal_v0();
  ::uint64_t raw_v0;
  memcpy(&raw_v0, &tmp_v0, sizeof(tmp_v0));
  if (raw_v0 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_v0(), target);
  }

  // double v1 = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v1 = this->_internal_v1();
  ::uint64_t raw_v1;
  memcpy(&raw_v1, &tmp_v1, sizeof(tmp_v1));
  if (raw_v1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_v1(), target);
  }

  // double v2 = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v2 = this->_internal_v2();
  ::uint64_t raw_v2;
  memcpy(&raw_v2, &tmp_v2, sizeof(tmp_v2));
  if (raw_v2 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_v2(), target);
  }

  // double v3 = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v3 = this->_internal_v3();
  ::uint64_t raw_v3;
  memcpy(&raw_v3, &tmp_v3, sizeof(tmp_v3));
  if (raw_v3 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_v3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:templdata.ScalarProto)
  return target;
}

::size_t ScalarProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:templdata.ScalarProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double v0 = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v0 = this->_internal_v0();
  ::uint64_t raw_v0;
  memcpy(&raw_v0, &tmp_v0, sizeof(tmp_v0));
  if (raw_v0 != 0) {
    total_size += 9;
  }

  // double v1 = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v1 = this->_internal_v1();
  ::uint64_t raw_v1;
  memcpy(&raw_v1, &tmp_v1, sizeof(tmp_v1));
  if (raw_v1 != 0) {
    total_size += 9;
  }

  // double v2 = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v2 = this->_internal_v2();
  ::uint64_t raw_v2;
  memcpy(&raw_v2, &tmp_v2, sizeof(tmp_v2));
  if (raw_v2 != 0) {
    total_size += 9;
  }

  // double v3 = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v3 = this->_internal_v3();
  ::uint64_t raw_v3;
  memcpy(&raw_v3, &tmp_v3, sizeof(tmp_v3));
  if (raw_v3 != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScalarProto::_class_data_ = {
    ScalarProto::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScalarProto::GetClassData() const {
  return &_class_data_;
}

void ScalarProto::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScalarProto*>(&to_msg);
  auto& from = static_cast<const ScalarProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:templdata.ScalarProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v0 = from._internal_v0();
  ::uint64_t raw_v0;
  memcpy(&raw_v0, &tmp_v0, sizeof(tmp_v0));
  if (raw_v0 != 0) {
    _this->_internal_set_v0(from._internal_v0());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v1 = from._internal_v1();
  ::uint64_t raw_v1;
  memcpy(&raw_v1, &tmp_v1, sizeof(tmp_v1));
  if (raw_v1 != 0) {
    _this->_internal_set_v1(from._internal_v1());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v2 = from._internal_v2();
  ::uint64_t raw_v2;
  memcpy(&raw_v2, &tmp_v2, sizeof(tmp_v2));
  if (raw_v2 != 0) {
    _this->_internal_set_v2(from._internal_v2());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_v3 = from._internal_v3();
  ::uint64_t raw_v3;
  memcpy(&raw_v3, &tmp_v3, sizeof(tmp_v3));
  if (raw_v3 != 0) {
    _this->_internal_set_v3(from._internal_v3());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarProto::CopyFrom(const ScalarProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:templdata.ScalarProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScalarProto::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScalarProto::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScalarProto::InternalSwap(ScalarProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v3_)
      + sizeof(ScalarProto::_impl_.v3_)
      - PROTOBUF_FIELD_OFFSET(ScalarProto, _impl_.v0_)>(
          reinterpret_cast<char*>(&_impl_.v0_),
          reinterpret_cast<char*>(&other->_impl_.v0_));
}

::google::protobuf::Metadata ScalarProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_template_5fdata_2eproto_getter, &descriptor_table_template_5fdata_2eproto_once,
      file_level_metadata_template_5fdata_2eproto[0]);
}
// ===================================================================

class MatProto::_Internal {
 public:
};

MatProto::MatProto(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:templdata.MatProto)
}
inline PROTOBUF_NDEBUG_INLINE MatProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

MatProto::MatProto(
    ::google::protobuf::Arena* arena,
    const MatProto& from)
    : ::google::protobuf::Message(arena) {
  MatProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rows_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, rows_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, rows_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:templdata.MatProto)
}
inline PROTOBUF_NDEBUG_INLINE MatProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void MatProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rows_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, rows_) +
               sizeof(Impl_::type_));
}
MatProto::~MatProto() {
  // @@protoc_insertion_point(destructor:templdata.MatProto)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MatProto::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MatProto::Clear() {
// @@protoc_insertion_point(message_clear_start:templdata.MatProto)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.rows_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.rows_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MatProto::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> MatProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MatProto_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MatProto, _impl_.data_)}},
    // int32 rows = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatProto, _impl_.rows_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MatProto, _impl_.rows_)}},
    // int32 cols = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatProto, _impl_.cols_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MatProto, _impl_.cols_)}},
    // int32 type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatProto, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MatProto, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 rows = 1;
    {PROTOBUF_FIELD_OFFSET(MatProto, _impl_.rows_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 cols = 2;
    {PROTOBUF_FIELD_OFFSET(MatProto, _impl_.cols_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 type = 3;
    {PROTOBUF_FIELD_OFFSET(MatProto, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(MatProto, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MatProto::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:templdata.MatProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 rows = 1;
  if (this->_internal_rows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_rows(), target);
  }

  // int32 cols = 2;
  if (this->_internal_cols() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_cols(), target);
  }

  // int32 type = 3;
  if (this->_internal_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_type(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:templdata.MatProto)
  return target;
}

::size_t MatProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:templdata.MatProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int32 rows = 1;
  if (this->_internal_rows() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_rows());
  }

  // int32 cols = 2;
  if (this->_internal_cols() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_cols());
  }

  // int32 type = 3;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MatProto::_class_data_ = {
    MatProto::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MatProto::GetClassData() const {
  return &_class_data_;
}

void MatProto::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MatProto*>(&to_msg);
  auto& from = static_cast<const MatProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:templdata.MatProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_rows() != 0) {
    _this->_internal_set_rows(from._internal_rows());
  }
  if (from._internal_cols() != 0) {
    _this->_internal_set_cols(from._internal_cols());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MatProto::CopyFrom(const MatProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:templdata.MatProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MatProto::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MatProto::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MatProto::InternalSwap(MatProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatProto, _impl_.type_)
      + sizeof(MatProto::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(MatProto, _impl_.rows_)>(
          reinterpret_cast<char*>(&_impl_.rows_),
          reinterpret_cast<char*>(&other->_impl_.rows_));
}

::google::protobuf::Metadata MatProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_template_5fdata_2eproto_getter, &descriptor_table_template_5fdata_2eproto_once,
      file_level_metadata_template_5fdata_2eproto[1]);
}
// ===================================================================

class TemplDataProto::_Internal {
 public:
};

TemplDataProto::TemplDataProto(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:templdata.TemplDataProto)
}
inline PROTOBUF_NDEBUG_INLINE TemplDataProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : pyramid_{visibility, arena, from.pyramid_},
        templmean_{visibility, arena, from.templmean_},
        templnorm_{visibility, arena, from.templnorm_},
        invarea_{visibility, arena, from.invarea_},
        resultequal1_{visibility, arena, from.resultequal1_},
        _cached_size_{0} {}

TemplDataProto::TemplDataProto(
    ::google::protobuf::Arena* arena,
    const TemplDataProto& from)
    : ::google::protobuf::Message(arena) {
  TemplDataProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ispatternlearned_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ispatternlearned_),
           offsetof(Impl_, pyramidlayers_) -
               offsetof(Impl_, ispatternlearned_) +
               sizeof(Impl_::pyramidlayers_));

  // @@protoc_insertion_point(copy_constructor:templdata.TemplDataProto)
}
inline PROTOBUF_NDEBUG_INLINE TemplDataProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pyramid_{visibility, arena},
        templmean_{visibility, arena},
        templnorm_{visibility, arena},
        invarea_{visibility, arena},
        resultequal1_{visibility, arena},
        _cached_size_{0} {}

inline void TemplDataProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ispatternlearned_),
           0,
           offsetof(Impl_, pyramidlayers_) -
               offsetof(Impl_, ispatternlearned_) +
               sizeof(Impl_::pyramidlayers_));
}
TemplDataProto::~TemplDataProto() {
  // @@protoc_insertion_point(destructor:templdata.TemplDataProto)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TemplDataProto::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TemplDataProto::Clear() {
// @@protoc_insertion_point(message_clear_start:templdata.TemplDataProto)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pyramid_.Clear();
  _impl_.templmean_.Clear();
  _impl_.templnorm_.Clear();
  _impl_.invarea_.Clear();
  _impl_.resultequal1_.Clear();
  ::memset(&_impl_.ispatternlearned_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.pyramidlayers_) -
      reinterpret_cast<char*>(&_impl_.ispatternlearned_)) + sizeof(_impl_.pyramidlayers_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TemplDataProto::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 0, 2> TemplDataProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TemplDataProto_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 pyramidLayers = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TemplDataProto, _impl_.pyramidlayers_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.pyramidlayers_)}},
    // repeated .templdata.MatProto pyramid = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.pyramid_)}},
    // repeated .templdata.ScalarProto templMean = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.templmean_)}},
    // repeated double templNorm = 3;
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.templnorm_)}},
    // repeated double invArea = 4;
    {::_pbi::TcParser::FastF64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.invarea_)}},
    // repeated bool resultEqual1 = 5;
    {::_pbi::TcParser::FastV8P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.resultequal1_)}},
    // bool isPatternLearned = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TemplDataProto, _impl_.ispatternlearned_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.ispatternlearned_)}},
    // int32 borderColor = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TemplDataProto, _impl_.bordercolor_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.bordercolor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .templdata.MatProto pyramid = 1;
    {PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.pyramid_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .templdata.ScalarProto templMean = 2;
    {PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.templmean_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated double templNorm = 3;
    {PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.templnorm_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double invArea = 4;
    {PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.invarea_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated bool resultEqual1 = 5;
    {PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.resultequal1_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // bool isPatternLearned = 6;
    {PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.ispatternlearned_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 borderColor = 7;
    {PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.bordercolor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 pyramidLayers = 8;
    {PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.pyramidlayers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::templdata::MatProto>()},
    {::_pbi::TcParser::GetTable<::templdata::ScalarProto>()},
  }}, {{
  }},
};

::uint8_t* TemplDataProto::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:templdata.TemplDataProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .templdata.MatProto pyramid = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_pyramid_size()); i < n; i++) {
    const auto& repfield = this->_internal_pyramid().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .templdata.ScalarProto templMean = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_templmean_size()); i < n; i++) {
    const auto& repfield = this->_internal_templmean().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated double templNorm = 3;
  if (this->_internal_templnorm_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_templnorm(), target);
  }

  // repeated double invArea = 4;
  if (this->_internal_invarea_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_invarea(), target);
  }

  // repeated bool resultEqual1 = 5;
  if (this->_internal_resultequal1_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_resultequal1(), target);
  }

  // bool isPatternLearned = 6;
  if (this->_internal_ispatternlearned() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_ispatternlearned(), target);
  }

  // int32 borderColor = 7;
  if (this->_internal_bordercolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_bordercolor(), target);
  }

  // int32 pyramidLayers = 8;
  if (this->_internal_pyramidlayers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_pyramidlayers(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:templdata.TemplDataProto)
  return target;
}

::size_t TemplDataProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:templdata.TemplDataProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .templdata.MatProto pyramid = 1;
  total_size += 1UL * this->_internal_pyramid_size();
  for (const auto& msg : this->_internal_pyramid()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .templdata.ScalarProto templMean = 2;
  total_size += 1UL * this->_internal_templmean_size();
  for (const auto& msg : this->_internal_templmean()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated double templNorm = 3;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_templnorm_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double invArea = 4;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_invarea_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool resultEqual1 = 5;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_resultequal1_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // bool isPatternLearned = 6;
  if (this->_internal_ispatternlearned() != 0) {
    total_size += 2;
  }

  // int32 borderColor = 7;
  if (this->_internal_bordercolor() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bordercolor());
  }

  // int32 pyramidLayers = 8;
  if (this->_internal_pyramidlayers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_pyramidlayers());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TemplDataProto::_class_data_ = {
    TemplDataProto::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TemplDataProto::GetClassData() const {
  return &_class_data_;
}

void TemplDataProto::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TemplDataProto*>(&to_msg);
  auto& from = static_cast<const TemplDataProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:templdata.TemplDataProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pyramid()->MergeFrom(
      from._internal_pyramid());
  _this->_internal_mutable_templmean()->MergeFrom(
      from._internal_templmean());
  _this->_internal_mutable_templnorm()->MergeFrom(from._internal_templnorm());
  _this->_internal_mutable_invarea()->MergeFrom(from._internal_invarea());
  _this->_internal_mutable_resultequal1()->MergeFrom(from._internal_resultequal1());
  if (from._internal_ispatternlearned() != 0) {
    _this->_internal_set_ispatternlearned(from._internal_ispatternlearned());
  }
  if (from._internal_bordercolor() != 0) {
    _this->_internal_set_bordercolor(from._internal_bordercolor());
  }
  if (from._internal_pyramidlayers() != 0) {
    _this->_internal_set_pyramidlayers(from._internal_pyramidlayers());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TemplDataProto::CopyFrom(const TemplDataProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:templdata.TemplDataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TemplDataProto::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TemplDataProto::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TemplDataProto::InternalSwap(TemplDataProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.pyramid_.InternalSwap(&other->_impl_.pyramid_);
  _impl_.templmean_.InternalSwap(&other->_impl_.templmean_);
  _impl_.templnorm_.InternalSwap(&other->_impl_.templnorm_);
  _impl_.invarea_.InternalSwap(&other->_impl_.invarea_);
  _impl_.resultequal1_.InternalSwap(&other->_impl_.resultequal1_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.pyramidlayers_)
      + sizeof(TemplDataProto::_impl_.pyramidlayers_)
      - PROTOBUF_FIELD_OFFSET(TemplDataProto, _impl_.ispatternlearned_)>(
          reinterpret_cast<char*>(&_impl_.ispatternlearned_),
          reinterpret_cast<char*>(&other->_impl_.ispatternlearned_));
}

::google::protobuf::Metadata TemplDataProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_template_5fdata_2eproto_getter, &descriptor_table_template_5fdata_2eproto_once,
      file_level_metadata_template_5fdata_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace templdata
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
