// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: template_data.proto
// Protobuf C++ Version: 4.25.8

#ifndef GOOGLE_PROTOBUF_INCLUDED_template_5fdata_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_template_5fdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025008 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_template_5fdata_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_template_5fdata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_template_5fdata_2eproto;
namespace templdata {
class MatProto;
struct MatProtoDefaultTypeInternal;
extern MatProtoDefaultTypeInternal _MatProto_default_instance_;
class ScalarProto;
struct ScalarProtoDefaultTypeInternal;
extern ScalarProtoDefaultTypeInternal _ScalarProto_default_instance_;
class TemplDataProto;
struct TemplDataProtoDefaultTypeInternal;
extern TemplDataProtoDefaultTypeInternal _TemplDataProto_default_instance_;
}  // namespace templdata
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace templdata {

// ===================================================================


// -------------------------------------------------------------------

class ScalarProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:templdata.ScalarProto) */ {
 public:
  inline ScalarProto() : ScalarProto(nullptr) {}
  ~ScalarProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScalarProto(::google::protobuf::internal::ConstantInitialized);

  inline ScalarProto(const ScalarProto& from)
      : ScalarProto(nullptr, from) {}
  ScalarProto(ScalarProto&& from) noexcept
    : ScalarProto() {
    *this = ::std::move(from);
  }

  inline ScalarProto& operator=(const ScalarProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScalarProto& operator=(ScalarProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScalarProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScalarProto* internal_default_instance() {
    return reinterpret_cast<const ScalarProto*>(
               &_ScalarProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ScalarProto& a, ScalarProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ScalarProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScalarProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScalarProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScalarProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScalarProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ScalarProto& from) {
    ScalarProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ScalarProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "templdata.ScalarProto";
  }
  protected:
  explicit ScalarProto(::google::protobuf::Arena* arena);
  ScalarProto(::google::protobuf::Arena* arena, const ScalarProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kV0FieldNumber = 1,
    kV1FieldNumber = 2,
    kV2FieldNumber = 3,
    kV3FieldNumber = 4,
  };
  // double v0 = 1;
  void clear_v0() ;
  double v0() const;
  void set_v0(double value);

  private:
  double _internal_v0() const;
  void _internal_set_v0(double value);

  public:
  // double v1 = 2;
  void clear_v1() ;
  double v1() const;
  void set_v1(double value);

  private:
  double _internal_v1() const;
  void _internal_set_v1(double value);

  public:
  // double v2 = 3;
  void clear_v2() ;
  double v2() const;
  void set_v2(double value);

  private:
  double _internal_v2() const;
  void _internal_set_v2(double value);

  public:
  // double v3 = 4;
  void clear_v3() ;
  double v3() const;
  void set_v3(double value);

  private:
  double _internal_v3() const;
  void _internal_set_v3(double value);

  public:
  // @@protoc_insertion_point(class_scope:templdata.ScalarProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double v0_;
    double v1_;
    double v2_;
    double v3_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_template_5fdata_2eproto;
};// -------------------------------------------------------------------

class MatProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:templdata.MatProto) */ {
 public:
  inline MatProto() : MatProto(nullptr) {}
  ~MatProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MatProto(::google::protobuf::internal::ConstantInitialized);

  inline MatProto(const MatProto& from)
      : MatProto(nullptr, from) {}
  MatProto(MatProto&& from) noexcept
    : MatProto() {
    *this = ::std::move(from);
  }

  inline MatProto& operator=(const MatProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatProto& operator=(MatProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MatProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const MatProto* internal_default_instance() {
    return reinterpret_cast<const MatProto*>(
               &_MatProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MatProto& a, MatProto& b) {
    a.Swap(&b);
  }
  inline void Swap(MatProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MatProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MatProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MatProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MatProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MatProto& from) {
    MatProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MatProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "templdata.MatProto";
  }
  protected:
  explicit MatProto(::google::protobuf::Arena* arena);
  MatProto(::google::protobuf::Arena* arena, const MatProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 4,
    kRowsFieldNumber = 1,
    kColsFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int32 rows = 1;
  void clear_rows() ;
  ::int32_t rows() const;
  void set_rows(::int32_t value);

  private:
  ::int32_t _internal_rows() const;
  void _internal_set_rows(::int32_t value);

  public:
  // int32 cols = 2;
  void clear_cols() ;
  ::int32_t cols() const;
  void set_cols(::int32_t value);

  private:
  ::int32_t _internal_cols() const;
  void _internal_set_cols(::int32_t value);

  public:
  // int32 type = 3;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:templdata.MatProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t rows_;
    ::int32_t cols_;
    ::int32_t type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_template_5fdata_2eproto;
};// -------------------------------------------------------------------

class TemplDataProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:templdata.TemplDataProto) */ {
 public:
  inline TemplDataProto() : TemplDataProto(nullptr) {}
  ~TemplDataProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TemplDataProto(::google::protobuf::internal::ConstantInitialized);

  inline TemplDataProto(const TemplDataProto& from)
      : TemplDataProto(nullptr, from) {}
  TemplDataProto(TemplDataProto&& from) noexcept
    : TemplDataProto() {
    *this = ::std::move(from);
  }

  inline TemplDataProto& operator=(const TemplDataProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TemplDataProto& operator=(TemplDataProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TemplDataProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TemplDataProto* internal_default_instance() {
    return reinterpret_cast<const TemplDataProto*>(
               &_TemplDataProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TemplDataProto& a, TemplDataProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TemplDataProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TemplDataProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TemplDataProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TemplDataProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TemplDataProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TemplDataProto& from) {
    TemplDataProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TemplDataProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "templdata.TemplDataProto";
  }
  protected:
  explicit TemplDataProto(::google::protobuf::Arena* arena);
  TemplDataProto(::google::protobuf::Arena* arena, const TemplDataProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPyramidFieldNumber = 1,
    kTemplMeanFieldNumber = 2,
    kTemplNormFieldNumber = 3,
    kInvAreaFieldNumber = 4,
    kResultEqual1FieldNumber = 5,
    kIsPatternLearnedFieldNumber = 6,
    kBorderColorFieldNumber = 7,
    kPyramidLayersFieldNumber = 8,
  };
  // repeated .templdata.MatProto pyramid = 1;
  int pyramid_size() const;
  private:
  int _internal_pyramid_size() const;

  public:
  void clear_pyramid() ;
  ::templdata::MatProto* mutable_pyramid(int index);
  ::google::protobuf::RepeatedPtrField< ::templdata::MatProto >*
      mutable_pyramid();
  private:
  const ::google::protobuf::RepeatedPtrField<::templdata::MatProto>& _internal_pyramid() const;
  ::google::protobuf::RepeatedPtrField<::templdata::MatProto>* _internal_mutable_pyramid();
  public:
  const ::templdata::MatProto& pyramid(int index) const;
  ::templdata::MatProto* add_pyramid();
  const ::google::protobuf::RepeatedPtrField< ::templdata::MatProto >&
      pyramid() const;
  // repeated .templdata.ScalarProto templMean = 2;
  int templmean_size() const;
  private:
  int _internal_templmean_size() const;

  public:
  void clear_templmean() ;
  ::templdata::ScalarProto* mutable_templmean(int index);
  ::google::protobuf::RepeatedPtrField< ::templdata::ScalarProto >*
      mutable_templmean();
  private:
  const ::google::protobuf::RepeatedPtrField<::templdata::ScalarProto>& _internal_templmean() const;
  ::google::protobuf::RepeatedPtrField<::templdata::ScalarProto>* _internal_mutable_templmean();
  public:
  const ::templdata::ScalarProto& templmean(int index) const;
  ::templdata::ScalarProto* add_templmean();
  const ::google::protobuf::RepeatedPtrField< ::templdata::ScalarProto >&
      templmean() const;
  // repeated double templNorm = 3;
  int templnorm_size() const;
  private:
  int _internal_templnorm_size() const;

  public:
  void clear_templnorm() ;
  double templnorm(int index) const;
  void set_templnorm(int index, double value);
  void add_templnorm(double value);
  const ::google::protobuf::RepeatedField<double>& templnorm() const;
  ::google::protobuf::RepeatedField<double>* mutable_templnorm();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_templnorm() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_templnorm();

  public:
  // repeated double invArea = 4;
  int invarea_size() const;
  private:
  int _internal_invarea_size() const;

  public:
  void clear_invarea() ;
  double invarea(int index) const;
  void set_invarea(int index, double value);
  void add_invarea(double value);
  const ::google::protobuf::RepeatedField<double>& invarea() const;
  ::google::protobuf::RepeatedField<double>* mutable_invarea();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_invarea() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_invarea();

  public:
  // repeated bool resultEqual1 = 5;
  int resultequal1_size() const;
  private:
  int _internal_resultequal1_size() const;

  public:
  void clear_resultequal1() ;
  bool resultequal1(int index) const;
  void set_resultequal1(int index, bool value);
  void add_resultequal1(bool value);
  const ::google::protobuf::RepeatedField<bool>& resultequal1() const;
  ::google::protobuf::RepeatedField<bool>* mutable_resultequal1();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_resultequal1() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_resultequal1();

  public:
  // bool isPatternLearned = 6;
  void clear_ispatternlearned() ;
  bool ispatternlearned() const;
  void set_ispatternlearned(bool value);

  private:
  bool _internal_ispatternlearned() const;
  void _internal_set_ispatternlearned(bool value);

  public:
  // int32 borderColor = 7;
  void clear_bordercolor() ;
  ::int32_t bordercolor() const;
  void set_bordercolor(::int32_t value);

  private:
  ::int32_t _internal_bordercolor() const;
  void _internal_set_bordercolor(::int32_t value);

  public:
  // int32 pyramidLayers = 8;
  void clear_pyramidlayers() ;
  ::int32_t pyramidlayers() const;
  void set_pyramidlayers(::int32_t value);

  private:
  ::int32_t _internal_pyramidlayers() const;
  void _internal_set_pyramidlayers(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:templdata.TemplDataProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::templdata::MatProto > pyramid_;
    ::google::protobuf::RepeatedPtrField< ::templdata::ScalarProto > templmean_;
    ::google::protobuf::RepeatedField<double> templnorm_;
    ::google::protobuf::RepeatedField<double> invarea_;
    ::google::protobuf::RepeatedField<bool> resultequal1_;
    bool ispatternlearned_;
    ::int32_t bordercolor_;
    ::int32_t pyramidlayers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_template_5fdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ScalarProto

// double v0 = 1;
inline void ScalarProto::clear_v0() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.v0_ = 0;
}
inline double ScalarProto::v0() const {
  // @@protoc_insertion_point(field_get:templdata.ScalarProto.v0)
  return _internal_v0();
}
inline void ScalarProto::set_v0(double value) {
  _internal_set_v0(value);
  // @@protoc_insertion_point(field_set:templdata.ScalarProto.v0)
}
inline double ScalarProto::_internal_v0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.v0_;
}
inline void ScalarProto::_internal_set_v0(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.v0_ = value;
}

// double v1 = 2;
inline void ScalarProto::clear_v1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.v1_ = 0;
}
inline double ScalarProto::v1() const {
  // @@protoc_insertion_point(field_get:templdata.ScalarProto.v1)
  return _internal_v1();
}
inline void ScalarProto::set_v1(double value) {
  _internal_set_v1(value);
  // @@protoc_insertion_point(field_set:templdata.ScalarProto.v1)
}
inline double ScalarProto::_internal_v1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.v1_;
}
inline void ScalarProto::_internal_set_v1(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.v1_ = value;
}

// double v2 = 3;
inline void ScalarProto::clear_v2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.v2_ = 0;
}
inline double ScalarProto::v2() const {
  // @@protoc_insertion_point(field_get:templdata.ScalarProto.v2)
  return _internal_v2();
}
inline void ScalarProto::set_v2(double value) {
  _internal_set_v2(value);
  // @@protoc_insertion_point(field_set:templdata.ScalarProto.v2)
}
inline double ScalarProto::_internal_v2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.v2_;
}
inline void ScalarProto::_internal_set_v2(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.v2_ = value;
}

// double v3 = 4;
inline void ScalarProto::clear_v3() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.v3_ = 0;
}
inline double ScalarProto::v3() const {
  // @@protoc_insertion_point(field_get:templdata.ScalarProto.v3)
  return _internal_v3();
}
inline void ScalarProto::set_v3(double value) {
  _internal_set_v3(value);
  // @@protoc_insertion_point(field_set:templdata.ScalarProto.v3)
}
inline double ScalarProto::_internal_v3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.v3_;
}
inline void ScalarProto::_internal_set_v3(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.v3_ = value;
}

// -------------------------------------------------------------------

// MatProto

// int32 rows = 1;
inline void MatProto::clear_rows() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rows_ = 0;
}
inline ::int32_t MatProto::rows() const {
  // @@protoc_insertion_point(field_get:templdata.MatProto.rows)
  return _internal_rows();
}
inline void MatProto::set_rows(::int32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:templdata.MatProto.rows)
}
inline ::int32_t MatProto::_internal_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rows_;
}
inline void MatProto::_internal_set_rows(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rows_ = value;
}

// int32 cols = 2;
inline void MatProto::clear_cols() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cols_ = 0;
}
inline ::int32_t MatProto::cols() const {
  // @@protoc_insertion_point(field_get:templdata.MatProto.cols)
  return _internal_cols();
}
inline void MatProto::set_cols(::int32_t value) {
  _internal_set_cols(value);
  // @@protoc_insertion_point(field_set:templdata.MatProto.cols)
}
inline ::int32_t MatProto::_internal_cols() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cols_;
}
inline void MatProto::_internal_set_cols(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cols_ = value;
}

// int32 type = 3;
inline void MatProto::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::int32_t MatProto::type() const {
  // @@protoc_insertion_point(field_get:templdata.MatProto.type)
  return _internal_type();
}
inline void MatProto::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:templdata.MatProto.type)
}
inline ::int32_t MatProto::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_;
}
inline void MatProto::_internal_set_type(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// bytes data = 4;
inline void MatProto::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MatProto::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:templdata.MatProto.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MatProto::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:templdata.MatProto.data)
}
inline std::string* MatProto::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:templdata.MatProto.data)
  return _s;
}
inline const std::string& MatProto::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void MatProto::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MatProto::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MatProto::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:templdata.MatProto.data)
  return _impl_.data_.Release();
}
inline void MatProto::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:templdata.MatProto.data)
}

// -------------------------------------------------------------------

// TemplDataProto

// repeated .templdata.MatProto pyramid = 1;
inline int TemplDataProto::_internal_pyramid_size() const {
  return _internal_pyramid().size();
}
inline int TemplDataProto::pyramid_size() const {
  return _internal_pyramid_size();
}
inline void TemplDataProto::clear_pyramid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pyramid_.Clear();
}
inline ::templdata::MatProto* TemplDataProto::mutable_pyramid(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:templdata.TemplDataProto.pyramid)
  return _internal_mutable_pyramid()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::templdata::MatProto>* TemplDataProto::mutable_pyramid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:templdata.TemplDataProto.pyramid)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pyramid();
}
inline const ::templdata::MatProto& TemplDataProto::pyramid(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:templdata.TemplDataProto.pyramid)
  return _internal_pyramid().Get(index);
}
inline ::templdata::MatProto* TemplDataProto::add_pyramid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::templdata::MatProto* _add = _internal_mutable_pyramid()->Add();
  // @@protoc_insertion_point(field_add:templdata.TemplDataProto.pyramid)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::templdata::MatProto>& TemplDataProto::pyramid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:templdata.TemplDataProto.pyramid)
  return _internal_pyramid();
}
inline const ::google::protobuf::RepeatedPtrField<::templdata::MatProto>&
TemplDataProto::_internal_pyramid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pyramid_;
}
inline ::google::protobuf::RepeatedPtrField<::templdata::MatProto>*
TemplDataProto::_internal_mutable_pyramid() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pyramid_;
}

// repeated .templdata.ScalarProto templMean = 2;
inline int TemplDataProto::_internal_templmean_size() const {
  return _internal_templmean().size();
}
inline int TemplDataProto::templmean_size() const {
  return _internal_templmean_size();
}
inline void TemplDataProto::clear_templmean() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.templmean_.Clear();
}
inline ::templdata::ScalarProto* TemplDataProto::mutable_templmean(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:templdata.TemplDataProto.templMean)
  return _internal_mutable_templmean()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::templdata::ScalarProto>* TemplDataProto::mutable_templmean()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:templdata.TemplDataProto.templMean)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_templmean();
}
inline const ::templdata::ScalarProto& TemplDataProto::templmean(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:templdata.TemplDataProto.templMean)
  return _internal_templmean().Get(index);
}
inline ::templdata::ScalarProto* TemplDataProto::add_templmean() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::templdata::ScalarProto* _add = _internal_mutable_templmean()->Add();
  // @@protoc_insertion_point(field_add:templdata.TemplDataProto.templMean)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::templdata::ScalarProto>& TemplDataProto::templmean() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:templdata.TemplDataProto.templMean)
  return _internal_templmean();
}
inline const ::google::protobuf::RepeatedPtrField<::templdata::ScalarProto>&
TemplDataProto::_internal_templmean() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.templmean_;
}
inline ::google::protobuf::RepeatedPtrField<::templdata::ScalarProto>*
TemplDataProto::_internal_mutable_templmean() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.templmean_;
}

// repeated double templNorm = 3;
inline int TemplDataProto::_internal_templnorm_size() const {
  return _internal_templnorm().size();
}
inline int TemplDataProto::templnorm_size() const {
  return _internal_templnorm_size();
}
inline void TemplDataProto::clear_templnorm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.templnorm_.Clear();
}
inline double TemplDataProto::templnorm(int index) const {
  // @@protoc_insertion_point(field_get:templdata.TemplDataProto.templNorm)
  return _internal_templnorm().Get(index);
}
inline void TemplDataProto::set_templnorm(int index, double value) {
  _internal_mutable_templnorm()->Set(index, value);
  // @@protoc_insertion_point(field_set:templdata.TemplDataProto.templNorm)
}
inline void TemplDataProto::add_templnorm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_templnorm()->Add(value);
  // @@protoc_insertion_point(field_add:templdata.TemplDataProto.templNorm)
}
inline const ::google::protobuf::RepeatedField<double>& TemplDataProto::templnorm() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:templdata.TemplDataProto.templNorm)
  return _internal_templnorm();
}
inline ::google::protobuf::RepeatedField<double>* TemplDataProto::mutable_templnorm()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:templdata.TemplDataProto.templNorm)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_templnorm();
}
inline const ::google::protobuf::RepeatedField<double>& TemplDataProto::_internal_templnorm()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.templnorm_;
}
inline ::google::protobuf::RepeatedField<double>* TemplDataProto::_internal_mutable_templnorm() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.templnorm_;
}

// repeated double invArea = 4;
inline int TemplDataProto::_internal_invarea_size() const {
  return _internal_invarea().size();
}
inline int TemplDataProto::invarea_size() const {
  return _internal_invarea_size();
}
inline void TemplDataProto::clear_invarea() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.invarea_.Clear();
}
inline double TemplDataProto::invarea(int index) const {
  // @@protoc_insertion_point(field_get:templdata.TemplDataProto.invArea)
  return _internal_invarea().Get(index);
}
inline void TemplDataProto::set_invarea(int index, double value) {
  _internal_mutable_invarea()->Set(index, value);
  // @@protoc_insertion_point(field_set:templdata.TemplDataProto.invArea)
}
inline void TemplDataProto::add_invarea(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_invarea()->Add(value);
  // @@protoc_insertion_point(field_add:templdata.TemplDataProto.invArea)
}
inline const ::google::protobuf::RepeatedField<double>& TemplDataProto::invarea() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:templdata.TemplDataProto.invArea)
  return _internal_invarea();
}
inline ::google::protobuf::RepeatedField<double>* TemplDataProto::mutable_invarea()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:templdata.TemplDataProto.invArea)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_invarea();
}
inline const ::google::protobuf::RepeatedField<double>& TemplDataProto::_internal_invarea()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.invarea_;
}
inline ::google::protobuf::RepeatedField<double>* TemplDataProto::_internal_mutable_invarea() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.invarea_;
}

// repeated bool resultEqual1 = 5;
inline int TemplDataProto::_internal_resultequal1_size() const {
  return _internal_resultequal1().size();
}
inline int TemplDataProto::resultequal1_size() const {
  return _internal_resultequal1_size();
}
inline void TemplDataProto::clear_resultequal1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resultequal1_.Clear();
}
inline bool TemplDataProto::resultequal1(int index) const {
  // @@protoc_insertion_point(field_get:templdata.TemplDataProto.resultEqual1)
  return _internal_resultequal1().Get(index);
}
inline void TemplDataProto::set_resultequal1(int index, bool value) {
  _internal_mutable_resultequal1()->Set(index, value);
  // @@protoc_insertion_point(field_set:templdata.TemplDataProto.resultEqual1)
}
inline void TemplDataProto::add_resultequal1(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_resultequal1()->Add(value);
  // @@protoc_insertion_point(field_add:templdata.TemplDataProto.resultEqual1)
}
inline const ::google::protobuf::RepeatedField<bool>& TemplDataProto::resultequal1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:templdata.TemplDataProto.resultEqual1)
  return _internal_resultequal1();
}
inline ::google::protobuf::RepeatedField<bool>* TemplDataProto::mutable_resultequal1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:templdata.TemplDataProto.resultEqual1)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resultequal1();
}
inline const ::google::protobuf::RepeatedField<bool>& TemplDataProto::_internal_resultequal1()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resultequal1_;
}
inline ::google::protobuf::RepeatedField<bool>* TemplDataProto::_internal_mutable_resultequal1() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resultequal1_;
}

// bool isPatternLearned = 6;
inline void TemplDataProto::clear_ispatternlearned() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ispatternlearned_ = false;
}
inline bool TemplDataProto::ispatternlearned() const {
  // @@protoc_insertion_point(field_get:templdata.TemplDataProto.isPatternLearned)
  return _internal_ispatternlearned();
}
inline void TemplDataProto::set_ispatternlearned(bool value) {
  _internal_set_ispatternlearned(value);
  // @@protoc_insertion_point(field_set:templdata.TemplDataProto.isPatternLearned)
}
inline bool TemplDataProto::_internal_ispatternlearned() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ispatternlearned_;
}
inline void TemplDataProto::_internal_set_ispatternlearned(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ispatternlearned_ = value;
}

// int32 borderColor = 7;
inline void TemplDataProto::clear_bordercolor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bordercolor_ = 0;
}
inline ::int32_t TemplDataProto::bordercolor() const {
  // @@protoc_insertion_point(field_get:templdata.TemplDataProto.borderColor)
  return _internal_bordercolor();
}
inline void TemplDataProto::set_bordercolor(::int32_t value) {
  _internal_set_bordercolor(value);
  // @@protoc_insertion_point(field_set:templdata.TemplDataProto.borderColor)
}
inline ::int32_t TemplDataProto::_internal_bordercolor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bordercolor_;
}
inline void TemplDataProto::_internal_set_bordercolor(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bordercolor_ = value;
}

// int32 pyramidLayers = 8;
inline void TemplDataProto::clear_pyramidlayers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pyramidlayers_ = 0;
}
inline ::int32_t TemplDataProto::pyramidlayers() const {
  // @@protoc_insertion_point(field_get:templdata.TemplDataProto.pyramidLayers)
  return _internal_pyramidlayers();
}
inline void TemplDataProto::set_pyramidlayers(::int32_t value) {
  _internal_set_pyramidlayers(value);
  // @@protoc_insertion_point(field_set:templdata.TemplDataProto.pyramidLayers)
}
inline ::int32_t TemplDataProto::_internal_pyramidlayers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pyramidlayers_;
}
inline void TemplDataProto::_internal_set_pyramidlayers(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pyramidlayers_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace templdata


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_template_5fdata_2eproto_2epb_2eh
